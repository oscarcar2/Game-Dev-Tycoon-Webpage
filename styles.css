/* 
These are my debugging highlights. 
I apply them to currently worked on elements to make sure i have a correct mental model of 
how given elements are dimensioned.
Mainly useful when invisible elements accidentally have unintuitive size relations or an errant
gap or similar is causing stuff to get pushed around unintentionally.

outline: 2px dashed #FF00C8;
background-color: rgb(112, 16, 91); 
*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    background-color: #FFF5D1;
}

.main-content { /* centers main content */
    display: flex;
    justify-content: center;
}

.container { /* constrains main content to a max width */
    display: flex;
    flex-direction: column; /* make each element follow the next vertically */
    align-items: center; /* Center contained divs horizontally (BECAUSE IT IS FLEX COLUMN I FUCKING SWEAR TO GOD THIS LANGUAGE). */
    max-width: 1050px; /* Maximum width for the layout */
    width: 100%; /* Makes the container flexible within the max-width */
    
    margin-top: 20px; /* The gap before the whole container element, to the header. */
    margin-bottom: 20px; /* The gap after the whole container element, to the footer. */
    gap: 40px; /* The gap between contained elements, the main body elements. */
    
    /* outline: 2px dashed #FF00C8; */
}


a {
    color: #237223;
}

p {
    /* Line and letter spacing slightly increaced from default for more pleasent body text reading. */
    line-height: 1.3;
    letter-spacing: 0.03rem;
}

h2 {
    text-align: center;
    font-style: italic;

    margin: 50px 0;
    
    color: #555555;
    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
}
    
h3 {
    /* Default spacing was smaller and caused certain letters to touch. */
    letter-spacing: 0.03em; 
}


.divider-line {
    border-radius: 5px; /* Rounds off the ends. */
    height: 3px; /* Thickness of the line */
    width: 80%; /* How wide the line is */
    background-color: #8C523080; /* Line color with 80% opacity */
    margin: 7px; /* Spacing around the line */
}


.decoration-wrapper { /* The general point of this is a repeatable visual element that doesn't impact layout. */
    max-width: 90%; /* I don't understand why, but this locks sub element width in general, so i need this max width or all sub elements become unresponsive to view port tightening. Fuck. */
}

.fake-buttons {
    display: flex;

    width: 150px;
    height: 0; /* Ensures the decoration adds no height to the element. */
    margin-left: auto; /* Push container to the right */

    gap: 10px;
}

.fake-left-red, .fake-middle-green, .fake-right-blue {
    position: relative;
    z-index: -1; /* Lower z-index, appears behind main element */
    overflow: visible; /* The whole point is overflow, this ensures it is visible. */

    transform: translateY(-7px); /* Very critical, otherwise the flat element above just displays down behind parent. */

    width: 40px;
    height: 30px;
    
    border: 3px solid #000000;
    border-radius: 10px;
}

.fake-left-red {
    background-color: #FF6666;
}

.fake-middle-green {
    background-color: #66FF66;
}

.fake-right-blue {
    background-color: #6666FF;
}

.window-container {
    background-color: #FFE9D1;
    border: 3px solid #000000;
    border-radius: 10px;
    box-shadow: 4px 4px 0 0 #000000;

    /* outline: 2px dashed #FF00C8; */
}



/* ################## */
/* ##### HEADER ##### */
/* ################## */

header {
    position: relative; /* Needed to enable z-index manipulation. */
    z-index: 1; /* Hide the slight overflow behind the header to do a bit of lazy cropping. */

    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px 20px;
    background-color: #F2BA52;
    border-bottom: 1px solid #D98D62;
}

.header-container {
    display: flex;
    justify-content: space-between;
    max-width: 1050px; /* Maximum width for the layout */
    width: 100%; /* Makes the container flexible within the max-width */
    margin: 0 auto; /* Centers the container horizontally */
}

.logo img {
    height: 50px;
    width: auto;
}

.navigation {
    display: flex;
    align-items: flex-end;
    padding: 5px;
}

.text-buttons a { /* fixes link anchors changing how element is displayed */
    text-decoration: none; /* Remove underline */
    display: inline-block; /* Make anchor behave like a block */
}

.text-buttons button,
.image-buttons button {
    background: none;
    border: none;
    font-size: 14px;
    margin: 5px;
    cursor: pointer;
    padding: 1px 5px;
    transition: background-color 0.3s;
}

.text-buttons button:hover {
    background-color: #e0e0e0;
    border-radius: 4px;
}

.image-buttons {
    display: flex; /* Align buttons horizontally */
    align-items: center; /* Vertically align content */
    gap: 5px;
}

.image-buttons button {
    margin: 0px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 30px;
    height: 30px;
}

.image-buttons button img {
    opacity: .5;
    transition: opacity 0.3s; /* Smooth transition */
    width: 30px;
    height: 30px;
}

.image-buttons button:hover img {
    opacity: 0.8;
}

/* ##### RESPONSIVE HEADER ##### */
/* Mobile layout changes. */

@media (max-width: 835px) { 
    .text-buttons {
        display: flex; /* Quick way to make button text stack saving space. */

        width: 320px; /* Locks dimension so it doesn't have ugly contraction behaviour. */
    }
}

@media (max-width: 690px) { 
    .text-buttons {
        flex-direction: column; /* Make it stack the buttons, we have enough width for the full Game Dev Tycoon button text. */

        width: auto; /* Unlock width or it remains fucked and too wide. */
    }

    .image-buttons {
        flex-direction: column;
    }

    /* Left as illustration, this is how i quickly determine if behaviour is activating at the intended width by simply dragging window size. */
    /* .header-container {
        outline: 2px dashed #FF00C8;
    } */
}



/* ################# */
/* ##### TITLE ##### */
/* ################# */

.banner-container {
    display: flex;
    flex-direction: column;
    align-items: center; /* Align items because flex direction column. */

    margin-top: -45px; /* NOTE: Header has z-index +1 to render over this for a quick and lazy crop. */
}

.banner-container img{
    width: 60%;
    height: auto;

    /* Supposedly webkit version of code is for compatibility with older browsers. Unverified. */
    /* Linear gradient only affecting opacity to create fade effect. */
    mask-image: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 20%, rgba(0, 0, 0, 1) 80%, rgba(0, 0, 0, 0) 100%);
    -webkit-mask-image: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 20%, rgba(0, 0, 0, 1) 80%, rgba(0, 0, 0, 0) 100%);

}

.banner-buttons {
    display: flex;
    flex-direction: row;
    
    z-index: 1; /* Force buttons to render over banner. */

    margin-top: -40px;
    gap: 10px;
}

.banner-buttons img {
    height: 50px;
    width: auto;
    
    mask-image: none; /* Disable the mask */
    -webkit-mask-image: none;
}

/* ##### RESPONSIVE TITLE ##### */
/* Mobile layout changes. */

@media (max-width: 740px) { /* Mobile layout changes. Some mobile responsiveness is built manually due to layout constraints already being tight so changes are simple. */
    
    .banner-buttons {
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* Locks layout to a 2x2 grid. */
    }
    
    /* .header-container {
        outline: 2px dashed #FF00C8;
    } */
}



/* ################# */
/* ##### MEDIA ##### */
/* ################# */

/* This should be converted to use the new window container class, but for now it's manually implemented here. */
.media-container {
    background-color: #FFE9D1;
    border: 3px solid #000000;
    border-radius: 10px;
    box-shadow: 4px 4px 0 0 #000000;

    gap: 0px; /* Extra spacing between displayed element and element selection below. Unused atm. */
    
    display: flex;
    flex-direction: column; /* Makes sure the container called lower is actually fucking below. */
    justify-content: center;
    align-items: center;
}

.media-container iframe { /* Video Frame */
    margin: 10px;
    
    width: 90%;
    aspect-ratio: 16/9;
    height: auto; /* For some fucking reason this is absolutelty needed despite ostencibly being the implicity default fuck my life */

    border-radius: 6px;
    border: 3px solid #F2BA52;
}

/* ##### LOWER MEDIA ##### */
.media-lower-container {
    display: flex; /* Makes elements shown as a line */

    margin: 10px;

    width: 95%;
    
    /* outline: 2px dashed #FF00C8; */
}

.media-lower-left-container-folder-img {
    display: flex; /* Force horizontal alignment. */
    justify-content: space-between; /* Fills the space between the images. */
    align-items: flex-start;
    
    width: 30%; /* Forces the folder graphics to only take 30% of available parent div. */
    
    /* background-color: #f0f0f0; */
    /* outline: 2px dashed #FF00C8; */
}

.media-lower-left-container-folder-img img {
    max-width: 50%;            /* Images can take up to a third of the width */
}

.media-lower-right-container-thumbnails {
    width: 70%; /* Manually set, must add up to 100% */

    display: flex;
    justify-content: space-between;

    /* outline: 2px dashed #FF00C8; */
}

.media-lower-right-container-thumbnails img { 
    margin-top: 10%; /* Push this element down so it appears to be a sub-element of the folder img. */

    border-radius: 3px; /* Rounded corners, feels like an os window more */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Shadow effect */

    max-width: 23%; /* Images may take up this much space. Theoretically 25% each, but a few given up for spacing. */

    /* outline: 2px dashed #FF00C8; */
}



/* ################# */
/* ##### BLURB ##### */
/* ################# */

.h2-wrapper {
    background: radial-gradient(farthest-side, #ffca6760, rgba(255, 255, 255, 0));
}



/* ################### */
/* ##### REVIEWS ##### */
/* ################### */

.reviews-container {
    display: flex; /* Enables the use of gap. */
    flex-direction: column; /* Default flex direction wrong for this element. */

    align-items: center; /* Centers contents, only actually targeting the divider, but has to hit everything and then force reviews left in their own class. */
    
    padding: 10px;
    gap: 5px;

    /* outline: 2px dashed #FF00C8;  */
}

.individual-review {
    display: flex;

    align-items: center;

    width: 100%; /* CRITICAL flex: 1; does nothing if this does not get forced to fill it's available space here. */
    height: 100%;
    margin-right: auto; /* Forces the otherwise centered elements to the left. */

    gap: 10px;

    /* outline: 2px dashed #FF00C8; */
}

.individual-review-left-rating {
    display: flex;
    
    border-top: 5px solid #7c5102; 
    border-bottom: 5px solid #7c5102;
    border-radius: 5px;

    /* outline: 2px dashed #FF00C8; */
}

.individual-review-left-rating img {
    /* Awful solution to my image being smushed, but it fixes it quickly. Should be removed and image simply swapped for one that's not fucked. */
    aspect-ratio: 4/1;

    display: flex; /* Default inline element, setting to anything else removes inline behaviour like unwanted extra text spacing below image. */

    height: 60px;

    /* outline: 2px dashed #FF00C8; */
}

.individual-review-right-container{
    display: flex;
    flex-direction: column;
    align-items: flex-start;

    flex: 1; /* Allow this div to take up the remaining space */
    width: 100%; /* Only relevant for mobile layout, where this box needs to fill out width alone. */

    background-color: #FFEBA5;
    border-radius: 10px;
    outline: 2px solid #8C5230;

    padding: 10px;

    /* outline: 2px dashed #FF00C8; */
}

.individual-review-right-text {
    display: flex;

    font-size: larger;
    
    font-weight: bold;

    /* outline: 2px dashed #FF00C8; */
}

.individual-review-right-extra-text {
    display: flex;
    margin-left: auto;
    text-align: right;
    
    font-size: normal;
    font-weight: bold;
    font-style: italic;

    color: #6d6d6d;
}

/* ##### RESPONSIVE REVIEWS ##### */
/* Mobile layout changes. */
@media (max-width: 800px) { 
    .individual-review{
        flex-direction: column;

        /* outline: 2px dashed #FF00C8; */
    }
}



/* ####################### */
/* ##### DESCRIPTION ##### */
/* ####################### */

.all-descriptions-container {
    display: flex; /* Enables the use of flexbox features like centering. */
    flex-direction: column; /* Default flex direction wrong for this element. */

    align-items: center; /* Centers contents, only actually targeting the divider, but has to hit everything and then force reviews left in their own class. */

    width: 95%;
}

.individual-description-container {
    display: flex;

    align-items: center;
    gap: 25px;

    margin-top: 10px;
    margin-bottom: 10px;
    
    width: 100%;
}

.individual-description-container img {
    width: 40%;
}

.description-text-container {
    display: flex;
    flex-direction: column;

    gap: 5px;
}



/* ################### */
/* ##### SOCIALS ##### */
/* ################### */

/* I AM ONLY REWRITING WHAT I HAVE TO */
/* MOST OF THIS IS JUST USING THE REVIEWS CLASSES */

.individual-socials-left-button {
    display: flex;

    /* outline: 2px dashed #FF00C8; */
}

/* Had to get rid of the awful aspect ratio trick i did for the bad ratings image. */
.individual-socials-left-button img {
    display: flex; /* Default inline element, setting to anything else removes inline behaviour like unwanted extra text spacing below image. */

    height: 100px;

    /* outline: 2px dashed #FF00C8; */
}

.socials-bottom-others-container {
    display: flex;
    flex-direction: column;
    align-items: center; /* Centers text 'Follow us!'. Preceding needed for align-items: */
}

.socials-bottom-others-container-images {
    display: flex;
    justify-content: center;

    /* General logo alignment and breathing room. */
    gap: 40px;
    margin-top: 25px;
    margin-bottom: 25px;
}

.socials-bottom-others-container-images img {
    height: 100px; /* Locking size is OK here, even min width still works. */

    background-color: white;
    box-shadow: 0 0 0 10px white; /* I AM A GOLDEN GOD Shadow fills in the missing background from the offset outline. */
    /* It's actually incredibly stupid and bad but it's quicker and easier than adding a while extra div. */
    /* I decided agianst the outline so now these comments look stupid, but hey it still adds some visual breathing room. */
    
    border-radius: 10px; 

    /* outline: 2px dashed #FF00C8; */
}



/* ################## */
/* ##### VALUES ##### */
/* ################## */
/* Heavy reuse from game description */

.values-text-container {
    display: flex;
    
    align-items: center;
    gap: 25px;
    
    width: 80%;
    
    margin-top: 10px;
    margin-bottom: 10px;
}

/* ##### RESPONSIVE VALUES ##### */
/* Mobile layout changes. */
@media (max-width: 810px) { 
    .values-text-container {
        flex-direction: column;

        /* outline: 2px dashed #FF00C8; */
    }
}



/* ####################### */
/* ##### OTHER GAMES ##### */
/* ####################### */

/* It's all directly in HTML or derived from reviews or socials because this contains only a single element. 
More classes would be pointless extra code. */



/* ############### */
/* ##### FAQ ##### */
/* ############### */
/* The functionality behind this was written entirely by ChatGPT. */
.faq-container {
    display: flex;
    flex-direction: column;

    gap: 10px;

    width: 850px;
}
  
.faq-toggle {
    display: none; /* Hide the checkbox */
}
  
.faq-question {
    display: block;

    padding: 10px;
    
    border: 2px solid #000000;
    border-radius: 10px;
    box-shadow: 3px 3px 0 0 #000000;
    background-color: #FFE9D1;

    text-align: left;

    /* Replaces the normal arrow with a hand while hovering. */
    cursor: pointer;
}
  
.faq-answer {
    display: none;

    padding: 10px;
    margin-top: 5px;

    border-radius: 10px;
    background-color: #F2D0A7;

    font-size: 14px;
}

/* Show the answer when the checkbox is checked */
.faq-toggle:checked + .faq-question + .faq-answer {
    display: block;
}

/* ##### RESPONSIVE FAQ ##### */
/* Mobile layout changes. */
@media (max-width: 960px) { 
    /* Shitty solution but expedient. */
    .faq-container {
        width: 90%

        /* outline: 2px dashed #FF00C8; */
    }
}



/* ############################# */
/* ##### TROOPS IN CONTACT ##### */
/* ############################# */
/* This is fake. It does not work and is purely for layout and design illustration. */
/* The correct use of input, lable and textarea elements for this was written entirely by ChatGPT, 
because it is purely illustrative and therefor temporary anyway. */
.contact-form-container {
    width: 100%;
    max-width: 400px;

    padding: 20px;

    background-color: #FFE9D1;
    border: 3px solid #000000;
    border-radius: 10px;
    box-shadow: 4px 4px 0 0 #000000;
}
  
.contact-form h3 {
    margin-top: 0px;
    margin-bottom: 10px;

    font-size: 24px;
    text-align: center;
}
  
.contact-form label {
    display: block;

    margin-bottom: 8px;

    font-size: 14px;
    color: #555;
}
  
.contact-form input,
.contact-form textarea {
    width: 100%;

    padding: 10px;
    margin-bottom: 20px;
    
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
}
  
.contact-form input:focus,
.contact-form textarea:focus {
    border-color: #d49621;
    outline: none;
}
  
.contact-form textarea {
    height: 100px;

    resize: none;
}
  
.contact-form button {
    width: 100%;

    padding: 10px;

    background-color: #f3ac28;

    border: none;
    border-radius: 4px;
    
    color: #fff;
    font-size: 16px;

    cursor: pointer;
    transition: background-color 0.3s;
}
  
.contact-form button:hover {
    background-color: #d49621;
}



/* ################## */
/* ##### FOOTER ##### */
/* ################## */

footer {
    position: relative; /* Needed to enable z-index manipulation. */
    z-index: 1; /* Hide the slight overflow behind the footer to do a bit of lazy cropping. */

    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px 20px;
    background-color: #F2BA52;
    border-top: 1px solid #D98D62;
}

.footer-container {
    display: flex;
    justify-content: space-between;
    max-width: 1050px; /* Maximum width for the layout */
    width: 100%; /* Makes the container flexible within the max-width */
    margin: 0 auto; /* Centers the container horizontally */
}

.footer-logo img {
    height: 50px;
    width: auto;
}

.footer-navigation {
    display: flex;
    align-items: flex-end;
    padding: 5px;
}

.footer-text-buttons a { /* fixes link anchors changing how element is displayed */
    text-decoration: none; /* Remove underline */
    display: inline-block; /* Make anchor behave like a block */
}

.footer-text-buttons button,
.footer-image-buttons button {
    background: none;
    border: none;
    font-size: 14px;
    margin: 5px;
    cursor: pointer;
    padding: 1px 5px;
    transition: background-color 0.3s;
}

.footer-text-buttons button:hover {
    background-color: #e0e0e0;
    border-radius: 4px;
}

.footer-image-buttons {
    display: flex; /* Align buttons horizontally */
    align-items: center; /* Vertically align content */
    gap: 5px;
}

.footer-image-buttons button {
    margin: 0px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 30px;
    height: 30px;
}

.footer-image-buttons button img {
    opacity: .5;
    transition: opacity 0.3s; /* Smooth transition */
    width: 30px;
    height: 30px;
}

.footer-image-buttons button:hover img {
    opacity: 0.8;
}

/* ##### RESPONSIVE FOOTER ##### */
/* Mobile layout changes. */

@media (max-width: 835px) { 
    .footer-text-buttons {
        display: flex; /* Quick way to make button text stack saving space. */

        width: 320px; /* Locks dimension so it doesn't have ugly contraction behaviour. */
    }
}

@media (max-width: 690px) { 
    .footer-text-buttons {
        flex-direction: column; /* Make it stack the buttons, we have enough width for the full Game Dev Tycoon button text. */

        width: auto; /* Unlock width or it remains messed up and too wide. */
    }

    .footer-image-buttons {
        flex-direction: column;
    }
}